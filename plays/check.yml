---
# check.yml

- name: check that hosts meet the basic requirements
  any_errors_fatal: true
  gather_facts: false
  tags: always
  hosts: all

  pre_tasks:
    - name: check if some version of Python is installed and accessible
      raw: |-
        command -v python
      register: python_installed
      changed_when: false
      failed_when: not python_installed

    - name: check if pip is installed and accessible
      raw: |-
        command -v pip
      register: pip_installed
      changed_when: false
      failed_when: not pip_installed

    - name: Gather facts for later tasks
      setup:

  tasks:
    - name: check if host OS is supported
      fail:
        msg: "Reported host OS not supported"
      vars:
        target: "{{ ansible_distribution }}-{{ ansible_distribution_version }}"
        targets:
          - Alpine-3.11
          - CentOS-8
          - Ubuntu-18.04
          - Ubuntu-20.04
      changed_when: false
      failed_when: target not in targets

- name: check if current configuration is valid for all hosts
  any_errors_fatal: true
  gather_facts: false
  tags: always
  hosts: all

  tasks:
    - name: check if defined network interfaces exist
      fail:
        msg: "The interface {{ item }} does not exist"
      changed_when: false
      failed_when: interface not in interfaces
      vars:
        interface: "{{ item }}"
        interfaces: "{{ ansible_facts['interfaces'] }}"
      with_items:
        - "{{ ceph_mrg_interface }}"
        - "{{ ceph_mon_interface }}"
        - "{{ ceph_rgw_interface }}"

    - name: check if hosts are able to reach each other
      command: |-
        ping -c 1 {{ item['address'] }}
      changed_when: false
      failed_when: ping_result.rc > 0
      register: ping_result
      with_items: "{{ ansible_facts['iwm0']['ipv4'] }}"

    - name: enumerate storage devices in ceph_storage_devices
      set_fact:
        ceph_storage_devices_defined: "{{ defined_devices|unique }}"
      failed_when:
        - ceph_storage_devices is undefined
        - ceph_storage_devices | length < 1
      vars:
        devices: "{{ ceph_storage_devices[item.key] }}"
        defined_devices:
          - "{{ devices['block'] }}"
          - "{{ devices['db']  if devices['db']  is defined else [] }}"
          - "{{ devices['wal'] if devices['wal'] is defined else [] }}"
      with_items: "{{ ceph_storage_devices | dict2items }}"

    - name: enumerate storage devices in ansible_facts['devices']
      set_fact:
        ceph_storage_devices_found: "{{ item.split(':')[0] }}"
      with_items: "{{ ansible_facts['devices'] }}"

    - name: check if defined devices can be found
      fail:
        msg: "{{ item }}"
      failed_when: item not in ceph_storage_devices_found
      with_items: "{{ ceph_storage_devices_defined }}"
